version: "3.2"

services:
  postgres:
    image: postgres:9.4
    container_name: postgres
    env_file:
      - env/.env.dev
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py migrate
    env_file:
      - env/.env.dev
    depends_on:
      - postgres

  collectstatic:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py collectstatic
    env_file:
      - env/.env.dev
    depends_on:
      - postgres

  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: daphne config.asgi:application -b 0.0.0.0 -p 8000
    env_file:
      - env/.env.dev
    volumes:
      - .:/app
      - static_data:/srv
    environment:
      DATABASE: sqlite
    depends_on:
      - postgres
      - redis
      - migrate
    expose:
      - 8000

  nginx:
    build: ./config/nginx
    ports:
      - 80:80
    depends_on:
      - app
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./config/nginx:/etc/nginx/conf.d
      - static_data:/srv:ro  # ro readonly

  celery:
    build: .
    command: ["celery","-A", "config", "worker", "-l", "info"]
    volumes:
      - .:/app
    env_file:
      - env/.env.dev
    depends_on:
      - postgres
      - redis

  celery-beat:
    build: .
    command: ["celery", "-A", "config", "beat", "-l", "info"]
    volumes:
      - .:/app
    env_file:
      - env/.env.dev
    depends_on:
      - celery

  flower:
    build: .
    command: ["flower", "-A", "config", "--port=8888", "-l", "info"]
    volumes:
      - .:/app
    env_file:
      - env/.env.dev
    ports:
      - 8888:8888
    depends_on:
      - celery
volumes:
  postgres_data:
  static_data:
